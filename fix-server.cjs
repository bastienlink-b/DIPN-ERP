// Aide √† r√©soudre les probl√®mes avec le serveur proxy Node.js pour Notion
// Ce script v√©rifie la configuration et teste la connectivit√©

console.log('üîç V√©rification du serveur proxy Notion...');

// V√©rifier que les variables d'environnement sont correctement charg√©es
try {
  require('dotenv').config();
  
  console.log('‚úÖ Module dotenv charg√©');
  
  if (!process.env.NOTION_API_KEY) {
    console.error('‚ùå ERREUR: La cl√© API Notion n\'est pas d√©finie dans le fichier .env');
    console.log('   Veuillez vous assurer que votre fichier .env contient:');
    console.log('   NOTION_API_KEY=secret_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
  } else {
    console.log(`‚úÖ Cl√© API Notion trouv√©e (${process.env.NOTION_API_KEY.substring(0, 7)}...)`);
  }
} catch (error) {
  console.error('‚ùå ERREUR: Impossible de charger le module dotenv:', error.message);
}

// V√©rifier que le port est disponible
const net = require('net');
const PORT = process.env.PORT || 3001;

const server = net.createServer();
server.once('error', (err) => {
  if (err.code === 'EADDRINUSE') {
    console.error(`‚ùå ERREUR: Le port ${PORT} est d√©j√† utilis√© par un autre processus.`);
    console.log('   Veuillez arr√™ter ce processus ou changer le port dans .env');
  } else {
    console.error(`‚ùå ERREUR lors du test du port: ${err.message}`);
  }
  process.exit(1);
});

server.once('listening', () => {
  console.log(`‚úÖ Le port ${PORT} est disponible`);
  server.close();
  
  // Test de l'API Notion
  console.log('üîÑ Test de connexion √† l\'API Notion...');
  
  try {
    const { Client } = require('@notionhq/client');
    const notionClient = new Client({ auth: process.env.NOTION_API_KEY });
    
    notionClient.users.list({})
      .then(response => {
        console.log('‚úÖ Connexion √† l\'API Notion r√©ussie!');
        console.log('   Nombre d\'utilisateurs:', response.results.length);
        
        console.log('\nüìã R√âSUM√â:');
        console.log('- La cl√© API Notion est valide');
        console.log('- Le port est disponible');
        console.log('- La connexion √† l\'API Notion fonctionne');
        console.log('\n‚ú® Le serveur proxy est correctement configur√©!');
        console.log('   Ex√©cutez "npm run start" pour d√©marrer l\'application compl√®te.');
      })
      .catch(error => {
        console.error('‚ùå ERREUR lors de la connexion √† l\'API Notion:', error.message);
        
        if (error.message.includes('API token')) {
          console.log('\n‚ö†Ô∏è Il semble que la cl√© API Notion soit invalide.');
          console.log('   Veuillez v√©rifier que vous avez entr√© la bonne cl√© dans le fichier .env');
        }
      });
  } catch (error) {
    console.error('‚ùå ERREUR lors du chargement du client Notion:', error.message);
  }
});

server.listen(PORT);